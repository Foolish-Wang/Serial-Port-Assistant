<Window x:Class="Serial_Port_Assistant.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Serial_Port_Assistant"
        xmlns:converters="clr-namespace:Serial_Port_Assistant.Converters"
        xmlns:behaviors="clr-namespace:Serial_Port_Assistant.Behaviors"
        Title="{Binding FullTitle}" 
        Height="{Binding WindowHeight, Mode=TwoWay}" 
        Width="{Binding WindowWidth, Mode=TwoWay}"
        WindowState="{Binding WindowState, Mode=TwoWay}"
        MinWidth="800" MinHeight="500">

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 主要内容区域 -->
        <Grid Grid.Row="0" Margin="{StaticResource NormalMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- 左侧：串口配置和发送区 -->
            <StackPanel Grid.Column="0" Margin="{StaticResource SmallMargin}">
                
                <!-- 串口配置 -->
                <GroupBox Header="串口配置">
                    <Grid Margin="{StaticResource SmallMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="端口:" />
                        <ComboBox Grid.Row="0" Grid.Column="1"
                                  ItemsSource="{Binding SerialPortViewModel.AvailablePorts}"
                                  SelectedItem="{Binding SerialPortViewModel.Config.PortName, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="波特率:" />
                        <ComboBox Grid.Row="1" Grid.Column="1"
                                  ItemsSource="{Binding SerialPortViewModel.AvailableBaudRates}"
                                  SelectedItem="{Binding SerialPortViewModel.Config.BaudRate, Mode=TwoWay}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="数据位:" />
                        <ComboBox Grid.Row="2" Grid.Column="1"
                                  ItemsSource="{Binding SerialPortViewModel.AvailableDataBits}"
                                  SelectedItem="{Binding SerialPortViewModel.Config.DataBits, Mode=TwoWay}"/>

                        <Label Grid.Row="3" Grid.Column="0" Content="校验位:" />
                        <ComboBox Grid.Row="3" Grid.Column="1"
                                  ItemsSource="{Binding SerialPortViewModel.AvailableParities}"
                                  SelectedItem="{Binding SerialPortViewModel.Config.Parity, Mode=TwoWay}"/>

                        <Label Grid.Row="4" Grid.Column="0" Content="停止位:" />
                        <ComboBox Grid.Row="4" Grid.Column="1"
                                  ItemsSource="{Binding SerialPortViewModel.AvailableStopBits}"
                                  SelectedItem="{Binding SerialPortViewModel.Config.StopBits, Mode=TwoWay}"/>

                        <!-- 连接控制按钮 -->
                        <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" 
                                    Orientation="Horizontal" 
                                    HorizontalAlignment="Center"
                                    Margin="{StaticResource NormalMargin}">
                            <Button Content="连接" 
                                    Command="{Binding SerialPortViewModel.ConnectCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    Visibility="{Binding SerialPortViewModel.IsConnected, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"/>
                            
                            <Button Content="断开" 
                                    Command="{Binding SerialPortViewModel.DisconnectCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Visibility="{Binding SerialPortViewModel.IsConnected, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            
                            <Button Content="刷新" 
                                    Command="{Binding SerialPortViewModel.RefreshPortsCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Margin="{StaticResource SmallMargin}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- 发送区域 -->
                <GroupBox Header="数据发送" Margin="{StaticResource SmallMargin}">
                    <StackPanel Margin="{StaticResource SmallMargin}">
                        <!-- 发送文本框 -->
                        <TextBox Text="{Binding SerialPortViewModel.SendData, Mode=TwoWay}"
                                 Height="80"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Auto"/>

                        <!-- 发送选项 -->
                        <StackPanel Orientation="Horizontal" 
                                    Margin="{StaticResource SmallMargin}">
                            <CheckBox Content="十六进制发送" 
                                      IsChecked="{Binding SerialPortViewModel.IsHexMode, Mode=TwoWay}"/>
                        </StackPanel>

                        <!-- 发送按钮区 -->
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center"
                                    Margin="{StaticResource SmallMargin}">
                            <Button Content="发送" 
                                    Command="{Binding SerialPortViewModel.SendCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"/>
                            
                            <Button Content="清空" 
                                    Command="{Binding SerialPortViewModel.ClearSendCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Margin="{StaticResource SmallMargin}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <!-- 右侧：接收区域 -->
            <GroupBox Grid.Column="1" Header="数据接收" Margin="{StaticResource SmallMargin}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- 接收选项 -->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" 
                                Margin="{StaticResource SmallMargin}">
                        <CheckBox Content="十六进制显示" 
                                  IsChecked="{Binding SerialPortViewModel.IsReceiveHexMode, Mode=TwoWay}"/>
                    </StackPanel>

                    <!-- 接收数据显示 -->
                    <TextBox Grid.Row="1"
                             x:Name="ReceiveTextBox"
                             Text="{Binding SerialPortViewModel.ReceivedData, Mode=OneWay}"
                             IsReadOnly="True"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollBarVisibility="Auto"
                             Margin="{StaticResource SmallMargin}"
                             behaviors:AutoScrollBehavior.AutoScroll="True"
                             VerticalContentAlignment="Top"/> <!-- 新增：使内容从顶部开始 -->

                    <!-- 接收控制按钮 -->
                    <StackPanel Grid.Row="2" Orientation="Horizontal" 
                                HorizontalAlignment="Right"
                                Margin="{StaticResource SmallMargin}">
                        <Button Content="清空接收" 
                                Command="{Binding SerialPortViewModel.ClearReceiveCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"/>
                        
                        <Button Content="重置计数" 
                                Command="{Binding SerialPortViewModel.ResetCountersCommand}"
                                Style="{StaticResource SecondaryButtonStyle}"
                                Margin="{StaticResource SmallMargin}"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>

        <!-- 状态栏 -->
        <StatusBar Grid.Row="1">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="状态: "/>
                    <TextBlock Text="{Binding SerialPortViewModel.StatusMessage}" 
                               FontWeight="SemiBold"/>
                </StackPanel>
            </StatusBarItem>
            
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="接收: "/>
                    <TextBlock Text="{Binding SerialPortViewModel.ReceivedCount}" 
                               FontWeight="SemiBold"/>
                    <TextBlock Text=" 字节  发送: " Margin="5,0,0,0"/>
                    <TextBlock Text="{Binding SerialPortViewModel.SentCount}" 
                               FontWeight="SemiBold"/>
                    <TextBlock Text=" 字节"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>

</Window>